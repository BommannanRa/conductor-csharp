/* 
 * Orkes Conductor API Server
 *
 * Orkes Conductor API Server
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SecretResourceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SecretResourceApiTests
    {
        private SecretResourceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SecretResourceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SecretResourceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SecretResourceApi
            //Assert.IsInstanceOfType(typeof(SecretResourceApi), instance, "instance is a SecretResourceApi");
        }

        /// <summary>
        /// Test DeleteSecret
        /// </summary>
        [Test]
        public void DeleteSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.DeleteSecret(key);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test DeleteTagForSecret
        /// </summary>
        [Test]
        public void DeleteTagForSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string body = null;
            //instance.DeleteTagForSecret(key, body);
            
        }
        /// <summary>
        /// Test GetSecret
        /// </summary>
        [Test]
        public void GetSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.GetSecret(key);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test GetTags
        /// </summary>
        [Test]
        public void GetTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.GetTags(key);
            //Assert.IsInstanceOf<List<TagObject>> (response, "response is List<TagObject>");
        }
        /// <summary>
        /// Test ListAllSecretNames
        /// </summary>
        [Test]
        public void ListAllSecretNamesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListAllSecretNames();
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test ListSecretsThatUserCanGrantAccessTo
        /// </summary>
        [Test]
        public void ListSecretsThatUserCanGrantAccessToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListSecretsThatUserCanGrantAccessTo();
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        /// <summary>
        /// Test PutSecret
        /// </summary>
        [Test]
        public void PutSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string body = null;
            //string key = null;
            //var response = instance.PutSecret(body, key);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test PutTagForSecret
        /// </summary>
        [Test]
        public void PutTagForSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string body = null;
            //instance.PutTagForSecret(key, body);
            
        }
        /// <summary>
        /// Test SecretExists
        /// </summary>
        [Test]
        public void SecretExistsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.SecretExists(key);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
    }

}
