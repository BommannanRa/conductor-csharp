/* 
 * Orkes Conductor API Server
 *
 * Orkes Conductor API Server
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TagsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TagsApiTests
    {
        private TagsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TagsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TagsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TagsApi
            //Assert.IsInstanceOfType(typeof(TagsApi), instance, "instance is a TagsApi");
        }

        /// <summary>
        /// Test AddTaskTag
        /// </summary>
        [Test]
        public void AddTaskTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagObject body = null;
            //string taskName = null;
            //var response = instance.AddTaskTag(body, taskName);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test AddWorkflowTag
        /// </summary>
        [Test]
        public void AddWorkflowTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagObject body = null;
            //string name = null;
            //var response = instance.AddWorkflowTag(body, name);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test DeleteTaskTag
        /// </summary>
        [Test]
        public void DeleteTaskTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagString body = null;
            //string taskName = null;
            //var response = instance.DeleteTaskTag(body, taskName);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test DeleteWorkflowTag
        /// </summary>
        [Test]
        public void DeleteWorkflowTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TagObject body = null;
            //string name = null;
            //var response = instance.DeleteWorkflowTag(body, name);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test GetTags1
        /// </summary>
        [Test]
        public void GetTags1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTags1();
            //Assert.IsInstanceOf<List<TagObject>> (response, "response is List<TagObject>");
        }
        /// <summary>
        /// Test GetTaskTags
        /// </summary>
        [Test]
        public void GetTaskTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string taskName = null;
            //var response = instance.GetTaskTags(taskName);
            //Assert.IsInstanceOf<List<TagObject>> (response, "response is List<TagObject>");
        }
        /// <summary>
        /// Test GetWorkflowTags
        /// </summary>
        [Test]
        public void GetWorkflowTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.GetWorkflowTags(name);
            //Assert.IsInstanceOf<List<TagObject>> (response, "response is List<TagObject>");
        }
        /// <summary>
        /// Test SetTaskTags
        /// </summary>
        [Test]
        public void SetTaskTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<TagObject> body = null;
            //string taskName = null;
            //var response = instance.SetTaskTags(body, taskName);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test SetWorkflowTags
        /// </summary>
        [Test]
        public void SetWorkflowTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<TagObject> body = null;
            //string name = null;
            //var response = instance.SetWorkflowTags(body, name);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
    }

}
