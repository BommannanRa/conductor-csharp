/* 
 * Orkes Conductor API Server
 *
 * Orkes Conductor API Server
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MetadataResourceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MetadataResourceApiTests
    {
        private MetadataResourceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MetadataResourceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MetadataResourceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MetadataResourceApi
            //Assert.IsInstanceOfType(typeof(MetadataResourceApi), instance, "instance is a MetadataResourceApi");
        }

        /// <summary>
        /// Test Create
        /// </summary>
        [Test]
        public void CreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WorkflowDef body = null;
            //bool? overwrite = null;
            //var response = instance.Create(body, overwrite);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test Get
        /// </summary>
        [Test]
        public void GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //int? version = null;
            //bool? metadata = null;
            //var response = instance.Get(name, version, metadata);
            //Assert.IsInstanceOf<WorkflowDef> (response, "response is WorkflowDef");
        }
        /// <summary>
        /// Test GetAllWorkflows
        /// </summary>
        [Test]
        public void GetAllWorkflowsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string access = null;
            //bool? metadata = null;
            //string tagKey = null;
            //string tagValue = null;
            //var response = instance.GetAllWorkflows(access, metadata, tagKey, tagValue);
            //Assert.IsInstanceOf<List<WorkflowDef>> (response, "response is List<WorkflowDef>");
        }
        /// <summary>
        /// Test GetTaskDef
        /// </summary>
        [Test]
        public void GetTaskDefTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tasktype = null;
            //bool? metadata = null;
            //var response = instance.GetTaskDef(tasktype, metadata);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test GetTaskDefs
        /// </summary>
        [Test]
        public void GetTaskDefsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string access = null;
            //bool? metadata = null;
            //string tagKey = null;
            //string tagValue = null;
            //var response = instance.GetTaskDefs(access, metadata, tagKey, tagValue);
            //Assert.IsInstanceOf<List<TaskDef>> (response, "response is List<TaskDef>");
        }
        /// <summary>
        /// Test RegisterTaskDef
        /// </summary>
        [Test]
        public void RegisterTaskDefTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<TaskDef> body = null;
            //var response = instance.RegisterTaskDef(body);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test UnregisterTaskDef
        /// </summary>
        [Test]
        public void UnregisterTaskDefTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tasktype = null;
            //instance.UnregisterTaskDef(tasktype);
            
        }
        /// <summary>
        /// Test UnregisterWorkflowDef
        /// </summary>
        [Test]
        public void UnregisterWorkflowDefTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //int? version = null;
            //instance.UnregisterWorkflowDef(name, version);
            
        }
        /// <summary>
        /// Test Update
        /// </summary>
        [Test]
        public void UpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<WorkflowDef> body = null;
            //bool? overwrite = null;
            //var response = instance.Update(body, overwrite);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test UpdateTaskDef
        /// </summary>
        [Test]
        public void UpdateTaskDefTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TaskDef body = null;
            //var response = instance.UpdateTaskDef(body);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test UploadWorkflowsAndTasksDefinitionsToS3
        /// </summary>
        [Test]
        public void UploadWorkflowsAndTasksDefinitionsToS3Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UploadWorkflowsAndTasksDefinitionsToS3();
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
    }

}
