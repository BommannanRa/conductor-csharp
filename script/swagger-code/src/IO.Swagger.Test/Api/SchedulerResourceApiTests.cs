/* 
 * Orkes Conductor API Server
 *
 * Orkes Conductor API Server
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SchedulerResourceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SchedulerResourceApiTests
    {
        private SchedulerResourceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SchedulerResourceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SchedulerResourceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SchedulerResourceApi
            //Assert.IsInstanceOfType(typeof(SchedulerResourceApi), instance, "instance is a SchedulerResourceApi");
        }

        /// <summary>
        /// Test DeleteSchedule
        /// </summary>
        [Test]
        public void DeleteScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.DeleteSchedule(name);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test DeleteTagForSchedule
        /// </summary>
        [Test]
        public void DeleteTagForScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string body = null;
            //instance.DeleteTagForSchedule(name, body);
            
        }
        /// <summary>
        /// Test GetAllSchedules
        /// </summary>
        [Test]
        public void GetAllSchedulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workflowName = null;
            //var response = instance.GetAllSchedules(workflowName);
            //Assert.IsInstanceOf<List<WorkflowSchedule>> (response, "response is List<WorkflowSchedule>");
        }
        /// <summary>
        /// Test GetNextFewSchedules
        /// </summary>
        [Test]
        public void GetNextFewSchedulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cronExpression = null;
            //long? scheduleStartTime = null;
            //long? scheduleEndTime = null;
            //int? limit = null;
            //var response = instance.GetNextFewSchedules(cronExpression, scheduleStartTime, scheduleEndTime, limit);
            //Assert.IsInstanceOf<List<long?>> (response, "response is List<long?>");
        }
        /// <summary>
        /// Test GetSchedule
        /// </summary>
        [Test]
        public void GetScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.GetSchedule(name);
            //Assert.IsInstanceOf<WorkflowSchedule> (response, "response is WorkflowSchedule");
        }
        /// <summary>
        /// Test GetTagsForSchedule
        /// </summary>
        [Test]
        public void GetTagsForScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.GetTagsForSchedule(name);
            //Assert.IsInstanceOf<List<TagObject>> (response, "response is List<TagObject>");
        }
        /// <summary>
        /// Test PauseAllSchedules
        /// </summary>
        [Test]
        public void PauseAllSchedulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PauseAllSchedules();
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        /// <summary>
        /// Test PauseSchedule
        /// </summary>
        [Test]
        public void PauseScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.PauseSchedule(name);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test PutTagForSchedule
        /// </summary>
        [Test]
        public void PutTagForScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string body = null;
            //instance.PutTagForSchedule(name, body);
            
        }
        /// <summary>
        /// Test RequeueAllExecutionRecords
        /// </summary>
        [Test]
        public void RequeueAllExecutionRecordsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequeueAllExecutionRecords();
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        /// <summary>
        /// Test ResumeAllSchedules
        /// </summary>
        [Test]
        public void ResumeAllSchedulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ResumeAllSchedules();
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        /// <summary>
        /// Test ResumeSchedule
        /// </summary>
        [Test]
        public void ResumeScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.ResumeSchedule(name);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test SaveSchedule
        /// </summary>
        [Test]
        public void SaveScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SaveScheduleRequest body = null;
            //var response = instance.SaveSchedule(body);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test SearchV22
        /// </summary>
        [Test]
        public void SearchV22Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? start = null;
            //int? size = null;
            //string sort = null;
            //string freeText = null;
            //string query = null;
            //var response = instance.SearchV22(start, size, sort, freeText, query);
            //Assert.IsInstanceOf<SearchResultWorkflowScheduleExecutionModel> (response, "response is SearchResultWorkflowScheduleExecutionModel");
        }
        /// <summary>
        /// Test TestTimeout
        /// </summary>
        [Test]
        public void TestTimeoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.TestTimeout();
            
        }
    }

}
