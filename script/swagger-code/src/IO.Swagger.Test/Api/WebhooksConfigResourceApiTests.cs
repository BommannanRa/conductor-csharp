/* 
 * Orkes Conductor API Server
 *
 * Orkes Conductor API Server
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing WebhooksConfigResourceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WebhooksConfigResourceApiTests
    {
        private WebhooksConfigResourceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WebhooksConfigResourceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WebhooksConfigResourceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WebhooksConfigResourceApi
            //Assert.IsInstanceOfType(typeof(WebhooksConfigResourceApi), instance, "instance is a WebhooksConfigResourceApi");
        }

        /// <summary>
        /// Test CreateWebhook
        /// </summary>
        [Test]
        public void CreateWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebhookEvent body = null;
            //var response = instance.CreateWebhook(body);
            //Assert.IsInstanceOf<WebhookEvent> (response, "response is WebhookEvent");
        }
        /// <summary>
        /// Test DeleteWebhook
        /// </summary>
        [Test]
        public void DeleteWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteWebhook(id);
            
        }
        /// <summary>
        /// Test GetAllWebhook
        /// </summary>
        [Test]
        public void GetAllWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllWebhook();
            //Assert.IsInstanceOf<List<WebhookEvent>> (response, "response is List<WebhookEvent>");
        }
        /// <summary>
        /// Test GetWebhook
        /// </summary>
        [Test]
        public void GetWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetWebhook(id);
            //Assert.IsInstanceOf<WebhookEvent> (response, "response is WebhookEvent");
        }
        /// <summary>
        /// Test UpdateWebhook
        /// </summary>
        [Test]
        public void UpdateWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebhookEvent body = null;
            //string id = null;
            //var response = instance.UpdateWebhook(body, id);
            //Assert.IsInstanceOf<WebhookEvent> (response, "response is WebhookEvent");
        }
    }

}
