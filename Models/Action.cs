/*
 * Conductor API Server
 *
 * Conductor API Server
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Conductor.Client.Models
{
    /// <summary>
    /// Action
    /// </summary>
    [DataContract(Name = "Action")]
    public partial class Action : IEquatable<Action>, IValidatableObject
    {
        /// <summary>
        /// Defines _Action
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ActionEnum
        {
            /// <summary>
            /// Enum StartWorkflow for value: start_workflow
            /// </summary>
            [EnumMember(Value = "start_workflow")]
            StartWorkflow = 1,

            /// <summary>
            /// Enum CompleteTask for value: complete_task
            /// </summary>
            [EnumMember(Value = "complete_task")]
            CompleteTask = 2,

            /// <summary>
            /// Enum FailTask for value: fail_task
            /// </summary>
            [EnumMember(Value = "fail_task")]
            FailTask = 3

        }


        /// <summary>
        /// Gets or Sets _Action
        /// </summary>
        [DataMember(Name = "action", EmitDefaultValue = false)]
        public ActionEnum? _Action { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Action" /> class.
        /// </summary>
        /// <param name="action">action.</param>
        /// <param name="startWorkflow">startWorkflow.</param>
        /// <param name="completeTask">completeTask.</param>
        /// <param name="failTask">failTask.</param>
        /// <param name="expandInlineJSON">expandInlineJSON.</param>
        public Action(ActionEnum? action = default(ActionEnum?), StartWorkflow startWorkflow = default(StartWorkflow), TaskDetails completeTask = default(TaskDetails), TaskDetails failTask = default(TaskDetails), bool expandInlineJSON = default(bool))
        {
            this._Action = action;
            this.StartWorkflow = startWorkflow;
            this.CompleteTask = completeTask;
            this.FailTask = failTask;
            this.ExpandInlineJSON = expandInlineJSON;
        }

        /// <summary>
        /// Gets or Sets StartWorkflow
        /// </summary>
        [DataMember(Name = "start_workflow", EmitDefaultValue = false)]
        public StartWorkflow StartWorkflow { get; set; }

        /// <summary>
        /// Gets or Sets CompleteTask
        /// </summary>
        [DataMember(Name = "complete_task", EmitDefaultValue = false)]
        public TaskDetails CompleteTask { get; set; }

        /// <summary>
        /// Gets or Sets FailTask
        /// </summary>
        [DataMember(Name = "fail_task", EmitDefaultValue = false)]
        public TaskDetails FailTask { get; set; }

        /// <summary>
        /// Gets or Sets ExpandInlineJSON
        /// </summary>
        [DataMember(Name = "expandInlineJSON", EmitDefaultValue = true)]
        public bool ExpandInlineJSON { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Action {\n");
            sb.Append("  _Action: ").Append(_Action).Append("\n");
            sb.Append("  StartWorkflow: ").Append(StartWorkflow).Append("\n");
            sb.Append("  CompleteTask: ").Append(CompleteTask).Append("\n");
            sb.Append("  FailTask: ").Append(FailTask).Append("\n");
            sb.Append("  ExpandInlineJSON: ").Append(ExpandInlineJSON).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Action);
        }

        /// <summary>
        /// Returns true if Action instances are equal
        /// </summary>
        /// <param name="input">Instance of Action to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Action input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this._Action == input._Action ||
                    this._Action.Equals(input._Action)
                ) && 
                (
                    this.StartWorkflow == input.StartWorkflow ||
                    (this.StartWorkflow != null &&
                    this.StartWorkflow.Equals(input.StartWorkflow))
                ) && 
                (
                    this.CompleteTask == input.CompleteTask ||
                    (this.CompleteTask != null &&
                    this.CompleteTask.Equals(input.CompleteTask))
                ) && 
                (
                    this.FailTask == input.FailTask ||
                    (this.FailTask != null &&
                    this.FailTask.Equals(input.FailTask))
                ) && 
                (
                    this.ExpandInlineJSON == input.ExpandInlineJSON ||
                    this.ExpandInlineJSON.Equals(input.ExpandInlineJSON)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this._Action.GetHashCode();
                if (this.StartWorkflow != null)
                {
                    hashCode = (hashCode * 59) + this.StartWorkflow.GetHashCode();
                }
                if (this.CompleteTask != null)
                {
                    hashCode = (hashCode * 59) + this.CompleteTask.GetHashCode();
                }
                if (this.FailTask != null)
                {
                    hashCode = (hashCode * 59) + this.FailTask.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ExpandInlineJSON.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
